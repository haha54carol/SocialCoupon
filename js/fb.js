/** * Created by Carol on 2016/8/4. */window.fbAsyncInit = function() {    FB.init({        appId: '347770598755981',        cookie: true, // enable cookies to allow the server to access        // the session        xfbml: true, // parse social plugins on this page        version: 'v2.3' // use version 2.2    });    FB.getLoginStatus(function(response) {        statusChangeCallback(response);    });};// Load the SDK asynchronously(function(d, s, id) {    var js, fjs = d.getElementsByTagName(s)[0];    if (d.getElementById(id)) return;    js = d.createElement(s);    js.id = id;    // js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=347770598755981";    js.src = "//connect.facebook.net/en_US/sdk.js";    fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));// This is called with the results from from FB.getLoginStatus().function statusChangeCallback(response) {    console.log('statusChangeCallback');    console.log(response);    if (response.status === 'connected') {        // get user info        setUserInfo();        getCategories();    } else if (response.status === 'not_authorized') {        // document.getElementById('status').innerHTML = 'Please log into this app.';    } else {        // document.getElementById('status').innerHTML = 'Please log into Facebook.';    }}// This function is called when someone finishes with the Login// Button.  See the onlogin handler attached to it in the sample// code below.function checkLoginState() {    FB.getLoginStatus(function(response) {        statusChangeCallback(response);    });}// get photo// function getPhoto() {//     FB.api('/me/picture?type=normal', function(response) {//         var str = "<img src='" + response.data.url + "'/>";//         document.getElementById("status").innerHTML = str;//         setUserInfo();//     });// }// set user informationfunction setUserInfo() {    FB.api('/me', function(response) {        document.getElementById("user_image").src = "https://graph.facebook.com/" + response.id + "/picture?type=square";        document.getElementById("user_name").innerHTML = response.name;    });}// function getLikes() {//     FB.api('/me/likes', function(response) {//         console.log(response.data[0].name);//     });// }// get random numberfunction random(min, max) {    return Math.round(Math.random() * (max - min) + min);}// initial store informationfunction initStore() {    $.getJSON("https://dl.dropboxusercontent.com/u/17134959/stores.json", function(jsondata) {        var n = random(1, 10);        var index;        if (n > 5) {            index = 0;        } else {            index = 1;        }        document.getElementById("storeImage").src           = jsondata[index].image;        document.getElementById("storeName").textContent    = jsondata[index].name;        document.getElementById("storeAddress").textContent = jsondata[index].address;        document.getElementById("storePhone").textContent   = jsondata[index].phone;        document.getElementById("download").href = document.getElementById("storeImage").src;    });}initStore();// FB.ui({//     method: 'share_open_graph',//     action_type: 'og.likes',//     action_properties: JSON.stringify({//         object: 'https://developers.facebook.com/docs/',//     })// }, function(response) {});function getCategories() {    $.getJSON("https://dl.dropboxusercontent.com/u/17134959/categories.json", function(jsondata) {        var map = new Map();        for (i = 0; i < jsondata.length; i++) {            map.set(capitalize(jsondata[i].name), 0);        }        FB.api('/me/likes?limit=100', function(response) {            loadLikes(response, map);        });        function loadLikes(response, map) {            for (i = 0; i < response.data.length; i++) {                map.set(response.data[i].category, map.get(response.data[i].category) + 1);            }            if (response.paging.next) {                $.getJSON(response.paging.next, function(response) {                    loadLikes(response, map);                });            }            else {                var totalLikes = 0;                map.forEach(function(value, key) {                    if (value > 0)                        totalLikes+=value;                }, map)                console.log("total likes: " + totalLikes);            }        }    });    function capitalize(capitalize) {        return capitalize.substr(0, 1).toUpperCase() + capitalize.substr(1).toLowerCase();    }}